#
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# This lists the entry points visible to applications that use the
# libnetd_resolv library. Other entry points present in the library won't be
# usable.

LIBNETD_RESOLV {
  global:
    android_getaddrinfofornetcontext;
    android_gethostbyaddrfornetcontext;
    android_gethostbynamefornetcontext;
    android_net_res_stats_aggregate;
    android_net_res_stats_get_info_for_net;
    android_net_res_stats_get_usable_servers;
    resolv_delete_cache_for_net;
    resolv_set_nameservers_for_net;

    # These symbol names are generated by 'nm -D libnetd_resolv.so' with reverting the commit
    # (aosp/801454). They are temporarily necessary for netd to access DnsTls* classes before
    # we move qhook() and PrivateDnsConfiguration to libnetd_resolv library.
    # TODO: Remove them after we hide DnsTls* stuff thus netd no longer needs to access them.
    _ZN7android3net12DnsTlsSocket10initializeEv;
    _ZN7android3net12DnsTlsSocket10sslConnectEi;
    _ZN7android3net12DnsTlsSocket10tcpConnectEv;
    _ZN7android3net12DnsTlsSocket12readResponseEv;
    _ZN7android3net12DnsTlsSocket13sslDisconnectEv;
    _ZN7android3net12DnsTlsSocket4loopEv;
    _ZN7android3net12DnsTlsSocket5queryEtNS_9netdutils5SliceE;
    _ZN7android3net12DnsTlsSocket7sslReadENS_9netdutils5SliceEb;
    _ZN7android3net12DnsTlsSocket8sslWriteENS_9netdutils5SliceE;
    _ZN7android3net12DnsTlsSocket9sendQueryERKNS1_5QueryE;
    _ZN7android3net12DnsTlsSocketD0Ev;
    _ZN7android3net12DnsTlsSocketD1Ev;
    _ZN7android3net12DnsTlsSocketD2Ev;
    _ZN7android3net14DnsTlsQueryMap10onResponseENSt3__16vectorIhNS2_9allocatorIhEEEE;
    _ZN7android3net14DnsTlsQueryMap11recordQueryENS_9netdutils5SliceE;
    _ZN7android3net14DnsTlsQueryMap5clearEv;
    _ZN7android3net14DnsTlsQueryMap5emptyEv;
    _ZN7android3net14DnsTlsQueryMap6expireEPNS1_12QueryPromiseE;
    _ZN7android3net14DnsTlsQueryMap6getAllEv;
    _ZN7android3net14DnsTlsQueryMap7cleanupEv;
    _ZN7android3net14DnsTlsQueryMap9getFreeIdEv;
    _ZN7android3net14DnsTlsQueryMap9markTriedEt;
    _ZN7android3net15DnsTlsTransport10onResponseENSt3__16vectorIhNS2_9allocatorIhEEEE;
    _ZN7android3net15DnsTlsTransport11doReconnectEv;
    _ZN7android3net15DnsTlsTransport5queryENS_9netdutils5SliceE;
    _ZN7android3net15DnsTlsTransport8onClosedEv;
    _ZN7android3net15DnsTlsTransport8validateERKNS0_12DnsTlsServerEjj;
    _ZN7android3net15DnsTlsTransport9doConnectEv;
    _ZN7android3net15DnsTlsTransport9sendQueryENS0_14DnsTlsQueryMap5QueryE;
    _ZN7android3net15DnsTlsTransportD0Ev;
    _ZN7android3net15DnsTlsTransportD1Ev;
    _ZN7android3net15DnsTlsTransportD2Ev;
    _ZN7android3net16DnsTlsDispatcher5queryERKNS0_12DnsTlsServerEjNS_9netdutils5SliceES6_Pi;
    _ZN7android3net16DnsTlsDispatcher5queryERKNSt3__14listINS0_12DnsTlsServerENS2_9allocatorIS4_EEEEjNS_9netdutils5SliceESB_Pi;
    _ZN7android3net16DnsTlsDispatcherC1Ev;
    _ZN7android3net16DnsTlsDispatcherC2Ev;
    _ZNK7android3net12DnsTlsServer23wasExplicitlyConfiguredEv;
    _ZNK7android3net12DnsTlsServereqERKS1_;
    _ZNK7android3net12DnsTlsServerltERKS1_;
    _ZNK7android3net16DnsTlsDispatcher20getOrderedServerListERKNSt3__14listINS0_12DnsTlsServerENS2_9allocatorIS4_EEEEj;
    _ZNK7android3net17AddressComparatorclERKNS0_12DnsTlsServerES4_;
    _ZTVN7android3net15DnsTlsTransportE;
  local:
    *;
};
